name: "Publish and create releases"
on:
  pull_request:
    branches: [ master, changelog-test ]

    # types: [closed]
jobs:
  release:
    name: "Release"
    runs-on: ubuntu-latest
    # if: ${{ github.event.pull_request.merged == true && !contains(github.event.pull_request.labels.*.name, 'skip-ci') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.2.0
      - name: node
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      # - run: yarn install
      # - run: yarn build
      - run: yarn config set version-tag-prefix "v"
      - run: git config core.hooksPath /dev/null

      - name: Find version bump type
        id: BUMP_TYPE
        run: |
          IFS=',' read -r -a label_array <<< "${{ join(github.event.pull_request.labels.*.name, ',') }}"
          for item in ${label_array[*]}
          do
            if [[ "$item" == "major" || "$item" == "minor" || "$item" == "patch" ]]; then
              echo "::set-output name=TYPE::$(echo $item)"
            fi
          done
        shell: bash

      - name: Git tagging check
        id: TAG_CHECK
        run: |
          IFS=',' read -r -a label_array <<< "${{ join(github.event.pull_request.labels.*.name, ',') }}"
          if [[ "${label_array[*]}" =~ "release" ]]; then
            echo "::set-output name=TAG_OPTION::"
          else
            echo "::set-output name=TAG_OPTION::--no-git-tag-version"
          fi

      - name: Bump Version
        run: yarn version --${{steps.BUMP_TYPE.outputs.TYPE}} ${{steps.TAG_CHECK.outputs.TAG_OPTION}}

      - uses: EndBug/add-and-commit@v7
        with:
          branch: changelog-test
          message: 'New version release'

      - name: Read package.json
        uses: tyankatsu0105/read-package-version-actions@v1
        id: package-version

      - uses: 8BitJonny/gh-get-current-pr@2.0.0
        id: PR
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.event.pull_request.head.sha }}

      - name: Extract changelog
        id: CHANGELOG
        run: |
           content=$(echo "${{ steps.PR.outputs.pr_body }}" | python3 -c 'import json; import sys; print(json.dumps(sys.stdin.read().partition("### Description")[2].partition("### Checklist")[0].strip()))')
           echo "CHANGELOG=${content}" >> $GITHUB_ENV
        shell: bash

      - name: Update Changelog
        uses: stefanzweifel/changelog-updater-action@v1
        with:
          latest-version: ${{ steps.package-version.outputs.version }}
          release-notes: ${{ fromJson(env.CHANGELOG) }}

      - name: Commit and Push changes
        uses: EndBug/add-and-commit@v7
        with:
          branch: changelog-test
          message: 'Update CHANGELOG'


      # - name: Release Drafter
      #   uses: release-drafter/release-drafter@v5.15.0
      #   if: ${{contains(github.event.pull_request.labels.*.name, 'release')}}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag: v${{ steps.package-version.outputs.version }}
      #     publish: true

      # - name: "Publish"
      #   uses: JS-DevTools/npm-publish@v1
      #   with:
      #     access: "public"
      #     token: ${{ secrets.NPM_TOKEN }}